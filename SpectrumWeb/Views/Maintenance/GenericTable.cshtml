
@{
    @using SpectrumWeb.Controllers.ControllerCommon;
}
<h2 style="color:maroon;text-align:center">@ViewBag.Title</h2>

<script type="text/javascript" language="javascript" src="/local/common.js"></script>

@Html.Raw(@ViewBag.ClassDefnScript)

<style>
th {
    text-align:center;
    margin-top:auto;
    margin-bottom:auto;
}

tbody {
    padding-left:2px;
    padding-right:2px;
}

.row_selected td {
    background-color: black; !important;
}
 /*.dataTables_wrapper
 {
     margin:auto;
     text-align:center;
     float:none;
 }
*/
    .testFieldName {
        background-color: azure;
        height: 64px;
    }
    .DTE_FieldInput {
        background-color: yellow;
        height:64px;
    }
    .FixedRow {
        position:fixed;
    }

    div.DTE_Field_Type_textarea textarea  {
        padding: 3px;
        width: 200px;
        height: 120px;
        float:left;
    }

    #customForm {
        display: flex;
        flex-flow: row wrap;
    }

    #customForm fieldset {
        flex: 1;
           
        margin: 0.5em;
    }
</style>
<script>
    
var table;

const classMap = new Map();

//$(document).ready(window.alert("Table = " + table));

document.addEventListener('DOMContentLoaded', function () {
    initializeClassMap();
    //buildclassTableBody();
   

    $('#classTable tfoot th').each(function () {
        var title = $(this).text();
        $(this).html('<input type="text" placeholder="Filter ' + title + '" />');
    });
    
    editor = new $.fn.dataTable.Editor( {


        @Html.Raw(ViewBag.TemplateSpec)

        table: "#classTable",
        
        fields:
            [
                @Html.Raw(@ViewBag.TableFields)
            ],

    } );

    editor.on('preSubmit', function (e, data, action) {
        console.log('preSubmit, action = ' + action);
        console.log('preSubmit, data=' + data.data);

        let request = new XMLHttpRequest;

        request.open('POST', '/GenericTable/GenericUpdater', false);

        request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

        let jdata=JSON.stringify(data.data);

        console.log('preSubmit, jdata=' + jdata);

        request.send('action=' + action + '&data=' + jdata);

        let response = request.responseText;

        console.log('preSubmit, response=' + response);

        return true;
    });

    let table = new DataTable('#classTable', {
    
        //dom: 'Bfrtip',
        dom: "<'row'<'col-sm-2'><'col-sm-2'l><'col-sm-4 text-center'B><'col-sm-4'f>>" +
            "<'row'<'col-sm-12'tr>>" +
            "<'row'<'col-sm-4'>'row'<'col-sm-4'i><'col-sm-4'p>>",
        select: true,
        buttons: [
            'copy', 'csv', 'excel',
            { extend: 'pdf',
              orientation: 'landscape'},
            'print', 'searchBuilder',
            { extend: "create", editor: editor },
	        { extend: "edit",   editor: editor },
	        { extend: "remove", editor: editor } 
        ],

        columns: [
           @Html.Raw(@ViewBag.TableColumns)
        ],

        @Html.Raw(ViewBag.ColumnDefs)

        initComplete: function () {
            
            // Apply the search
            this.api()
                .columns()
                .every(function () {
                    var that = this;
 
                    $('input', this.footer()).on('keyup change clear', function () {
                        if (that.search() !== this.value) {
                            that.search(this.value).draw();
                        }
                    });
                });

            },

    //        scrollY:        500,
    scrollX:        false,
    //scrollCollapse: true,
    //paging:         true,
    //fixedColumns:   true,
    //select: true 
        });


    table.buttons(0, null).containers().css('float:right');

    table.on('dblclick', 'tbody tr', function () {

        let data = table.row(this).data();
 
        alert('You clicked on ' + data[0] + "'s row");
    });

    table.on('click', 'td.dt-control', function (e) {
        let tr = e.target.closest('tr');
        let row = table.row(tr);
        if (row.child.isShown()) {
            // This row is already open - close it
            row.child.hide();
        }
        else {
            // Open this row
            row.child(format(row.data())).show();
        }
    });

        function format(d) {
           
            rtrnValu=@Html.Raw(ViewBag.ChildFieldFormatter);
            //rtrnValu += "<hr/>";
            //rtrnValu += "<table>";
            //rtrnValu += "    <tr>";
            //rtrnValu += "        <th></th><th>Part Nmbr</th><th>Whse</th><th>Serial Nmbr</th>";
            //rtrnValu += "    </tr>";
            //rtrnValu += "    <tr>";
            //rtrnValu += "        <td></td><td>" + d.PartNumber01 + "</td><td>" + d.Warehouse01 + "</td><td>" + d.SerialNumber01 + "</td>";
            //rtrnValu += "    </tr>";
            //rtrnValu += "    <tr>";
            //rtrnValu += "        <td></td><td>" + d.PartNumber02 + "</td><td>" + d.Warehouse02 + "</td><td>" + d.SerialNumber02 + "</td>";
            //rtrnValu += "    </tr>";
            //rtrnValu += "    <tr>";
            //rtrnValu += "        <td></td><td>" + d.PartNumber03 + "</td><td>" + d.Warehouse03 + "</td><td>" + d.SerialNumber03 + "</td>";
            //rtrnValu += "    </tr>";
            //rtrnValu += "    <tr>";
            //rtrnValu += "        <td></td><td>" + d.PartNumber04 + "</td><td>" + d.Warehouse04 + "</td><td>" + d.SerialNumber04 + "</td>";
            //rtrnValu += "    </tr>";
            //rtrnValu += "</table>";

       //let rtrnValu = "<h6 style='color:maroon'>Description</h6>" + "<tr><td>" + d.Description + "</td></tr>"; // @Html.Raw(ViewBag.ChildFieldFormatter);
        //rtrnValu += "<hr style='width:4px;color:maroon;margin-top:16px;margin-bottom:16px;width:100%'/>";
        //rtrnValu += "<h6 style='color:maroon'>Resolution</h6>"
        //rtrnValu += "<table>";
        //rtrnValu += "    <tr style='height:16px'>";
        //rtrnValu += "        <th>Part Nmbr</th><th>Whse</th><th>Serial Nmbr</th>";
        //rtrnValu += "    </tr>";
        //rtrnValu += "    <tr>";
        //rtrnValu += "        <td>" + d.PartNumber01 + "</td><td>" + d.Warehouse01 + "</td><td>" + d.SerialNumber01 + "</td>";
        //rtrnValu += "    </tr>";
        //rtrnValu += "    <tr>";
        //rtrnValu += "        <td>" + d.PartNumber02 + "</td><td>" + d.Warehouse02 + "</td><td>" + d.SerialNumber02 + "</td>";
        //rtrnValu += "    </tr>";
        //rtrnValu += "    <tr>";
        //rtrnValu += "        <td>" + d.PartNumber03 + "</td><td>" + d.Warehouse03 + "</td><td>" + d.SerialNumber03 + "</td>";
        //rtrnValu += "    </tr>";
        //rtrnValu += "    <tr>";
        //rtrnValu += "        <td>" + d.PartNumber04 + "</td><td>" + d.Warehouse04 + "</td><td>" + d.SerialNumber04 + "</td>";
        //rtrnValu += "    </tr>";
        //rtrnValu += "</table>";

            console.log(rtrnValu);

            return(rtrnValu);

        }

    });
   
    new $.fn.dataTable.Buttons( table, {
        buttons:[
        {
            extend: 'searchBuilder',
            config: {
                depthLimit: 4
            }
        }
        ],
    } );

function initializeClassMap()
{
    @Html.Raw(@ViewBag.ClassMapInitializer)
    // classMap.forEach(function(val)
    //{
    //    console.log(val.DateEntered);
    //});
}
</script>

<div style="height:32px"></div>

@Html.Raw(ViewBag.TemplateDiv)

<table id="classTable" class="table table-striped table-bordered table-hover" style="table-layout:fixed;@ViewBag.TableWidth">
    <thead>
        <tr>
            @Html.Raw(@ViewBag.TableHeader)
        </tr>
    </thead>
    <tfoot>
        <tr>
            @Html.Raw(@ViewBag.TableFooter)
        </tr>
    </tfoot>

    <tbody id='classTableBody'>      
        @Html.Raw(@ViewBag.ClassTableBody)
    </tbody>
                
</table>

<script>

function buildclassTableBody(){
    
    @Html.Raw(ViewBag.TableBodyBuilder)
    
 
}

</script>
