@{
    ViewData["Title"] = "Home Page";
}

<style>
    tfoot input {
        width: 100%;
        /* align-content: left;
        text-align:left; */
    }

    tfoot th, tfoot td {
        text-align: left !important;
    }
</style>
<script>
    var table;

    function setupBaseDataTable() {
        table = new DataTable('#classTable',
            {

                layout:
                {
                    top2: 'searchPanes',
                    top1: {
                        buttons: [
                            'print', 'searchBuilder'
                        ]
                    },
                },

                searchPanes: {
                    viewTotal: true,
                    layout: 'columns-4',
                    columns: [3, 4, 16, 17],
                    threshold: 1,
                    header: 'Hello sailor',
                },

                fixedHeader: {
                    header: true,
                    footer: true
                },

                "pageLength": 16,

                columns: [
                    @Html.Raw(@ViewBag.TableColumns)
                ],

                @Html.Raw(ViewBag.ColumnDefs)

                select: true,

                buttons: [
                    { extend: 'print' },
                    { extend: 'searchBuilder' },
                 ],

                initComplete: function () {
                    this.api()
                        .columns()
                        .every(function () {
                           
                            let column = this;
                            let title = column.footer().textContent;
                        
                            if (title != "Edit" && title.length > 0) {

                                // Create input element
                                let input = document.createElement('input');
                                input.placeholder = title;
                                
                                column.footer().replaceChildren(input);

                                // Event listener for user input
                                input.addEventListener('keyup', () => {
                                    if (column.search() !== this.value) {
                                        column.search(input.value).draw();
                                    }
                                })
                            };
                        });
                },

                scrollX: true,
                scrollY: true,
                fixedColumns: false,
          });

    }

    function setupClickResponses() {

        table.on('dblclick', 'tbody tr td', function () {

            // console.log("at point 1");

            // console.log(this);

            if ($(this).hasClass("detailsCell")) {
                let detailsUrl = @Html.Raw(ViewBag.DetailsUrl) ;

                if (detailsUrl) {

                    // let data = table.row(this).data();

                    let id = table.row(this).id();

                    let newWindow = window.open(detailsUrl + '?id=' + id);

                }

                return;
            }
        });

        table.on('click', 'td.dt-control', function (e) {
            // console.log("at point 2");
            let tr = e.target.closest('tr');
            let row = table.row(tr);
            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
            }
            else {
                // Open this row
                row.child(format(row.data())).show();
            }
        });

        function format(d) {

            rtrnValu = @Html.Raw(ViewBag.ChildFieldFormatter);

            //console.log(rtrnValu);

            return (rtrnValu);

        }
    }
   
    $(document).ready(function () {

        setupBaseDataTable();

        setupClickResponses();
    }
    )


       

</script>

<div class="row">
    <div class="col-1" style="width:32px"></div>

    <div class="col-11">
        <div id="tableDiv">
            <table id="classTable" class="table table-striped table-bordered table-hover" style="table-layout:fixed;float:left;@ViewBag.TableWidth">
                <thead>
                    <tr style="color:maroon">
                        @Html.Raw(@ViewBag.TableHeader)
                    </tr>
                </thead>
               
                <tbody id='classTableBody'>
                    @Html.Raw(@ViewBag.ClassTableBody)
                </tbody>
                <tfoot>
                    <tr>
                        @Html.Raw(@ViewBag.TableFooter)
                    </tr>
                </tfoot>

            </table>
        </div>

    </div>
</div>
